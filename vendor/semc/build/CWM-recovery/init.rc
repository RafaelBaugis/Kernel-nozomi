on early-init
    start ueventd

on init
    sysclktz 0

    # setup the global environment
    export PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
    import /tz.conf

#    symlink /system/etc /etc

    mkdir /boot
    mkdir /recovery
    mkdir /sdcard
    mkdir /internal_sd
    mkdir /external_sd
    mkdir /sd-ext
    mkdir /datadata
    mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp

    # USB related initialization
    write /sys/class/android_usb/android0/iSerial $ro.serialno

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    # USB gadget initial setup
    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
    write /sys/class/android_usb/android0/iProduct $ro.product.model

    class_start core

# Used to disable USB when switching states
on property:sys.usb.config=none
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state $sys.usb.config

# adb only USB configuration
# This should only be used during device bringup
# and as a fallback if the USB manager fails to set a standard configuration
on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct D002
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration
on property:sys.usb.config=accessory
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d00
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration, with adb
on property:sys.usb.config=accessory,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d01
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
on property:persist.sys.usb.config=*
    setprop sys.usb.config $persist.sys.usb.config

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    class core
    critical

service console /sbin/sh
    class core
    console
    disabled
    user shell
    group log

service recovery /sbin/recovery
    class core

on property:ro.debuggable=1
    start console

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd
    class core
    disabled

# adbd on at boot in emulator
on property:ro.kernel.qemu=1
    start adbd

# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

on property:sys.usb.config=mass_storage
    exec /init.usbmode.sh
    stop adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=mass_storage,adb
    exec /init.usbmode.sh $sys.usb.config
    start adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=mtp
    exec /init.usbmode.sh
    stop adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=mtp,adb
    exec /init.usbmode.sh
    start adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=mtp,cdrom
    exec /init.usbmode.sh
    stop adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=mtp,cdrom,adb
    exec /init.usbmode.sh
    stop adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=rndis
    exec /init.usbmode.sh
    stop adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=rndis,adb
    exec /init.usbmode.sh
    start adbd
    setprop sys.usb.state $sys.usb.config

